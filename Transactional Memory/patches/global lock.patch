Subject: [PATCH] global lock

---
 Transactional Memory/concurrent-linked-list-main.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/Transactional Memory/concurrent-linked-list-main.cpp b/Transactional Memory/concurrent-linked-list-main.cpp
--- a/Transactional Memory/concurrent-linked-list-main.cpp	
+++ b/Transactional Memory/concurrent-linked-list-main.cpp	
@@ -1,4 +1,5 @@
 #include <chrono>
+#include <mutex>
 #include <thread>
 #include <utility> // std::unreachable
 #include <vector>
@@ -27,12 +28,15 @@ int main(int argumentCount, const char *arguments[]) {
 
   LinkedList list{};
 
+  static auto globalLock = std::mutex{}; // global-ish
+
   std::vector<std::thread> threads;
   threads.reserve(threadCount);
 
   for (int i = 0; i < threadCount; ++i) {
     threads.emplace_back([&list] {
       while (true) {
+        std::lock_guard<std::mutex> lock{globalLock};
         mutate(list);
       }
     });
-- 
2.40.0

